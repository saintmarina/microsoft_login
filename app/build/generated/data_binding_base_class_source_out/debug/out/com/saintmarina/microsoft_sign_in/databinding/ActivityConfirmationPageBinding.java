// Generated by view binder compiler. Do not edit!
package com.saintmarina.microsoft_sign_in.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.apachat.loadingbutton.core.customViews.CircularProgressButton;
import com.saintmarina.microsoft_sign_in.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityConfirmationPageBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView checkImage;

  @NonNull
  public final CircularProgressButton circLoginButton;

  @NonNull
  public final TextView confirmationText;

  @NonNull
  public final TextView confirmedTitle;

  @NonNull
  public final TextView emailText;

  @NonNull
  public final TextView nameText;

  @NonNull
  public final TextView wesiteText;

  private ActivityConfirmationPageBinding(@NonNull RelativeLayout rootView,
      @NonNull ImageView checkImage, @NonNull CircularProgressButton circLoginButton,
      @NonNull TextView confirmationText, @NonNull TextView confirmedTitle,
      @NonNull TextView emailText, @NonNull TextView nameText, @NonNull TextView wesiteText) {
    this.rootView = rootView;
    this.checkImage = checkImage;
    this.circLoginButton = circLoginButton;
    this.confirmationText = confirmationText;
    this.confirmedTitle = confirmedTitle;
    this.emailText = emailText;
    this.nameText = nameText;
    this.wesiteText = wesiteText;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityConfirmationPageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityConfirmationPageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_confirmation_page, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityConfirmationPageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.check_image;
      ImageView checkImage = ViewBindings.findChildViewById(rootView, id);
      if (checkImage == null) {
        break missingId;
      }

      id = R.id.circLoginButton;
      CircularProgressButton circLoginButton = ViewBindings.findChildViewById(rootView, id);
      if (circLoginButton == null) {
        break missingId;
      }

      id = R.id.confirmation_text;
      TextView confirmationText = ViewBindings.findChildViewById(rootView, id);
      if (confirmationText == null) {
        break missingId;
      }

      id = R.id.confirmed_title;
      TextView confirmedTitle = ViewBindings.findChildViewById(rootView, id);
      if (confirmedTitle == null) {
        break missingId;
      }

      id = R.id.emailText;
      TextView emailText = ViewBindings.findChildViewById(rootView, id);
      if (emailText == null) {
        break missingId;
      }

      id = R.id.nameText;
      TextView nameText = ViewBindings.findChildViewById(rootView, id);
      if (nameText == null) {
        break missingId;
      }

      id = R.id.wesiteText;
      TextView wesiteText = ViewBindings.findChildViewById(rootView, id);
      if (wesiteText == null) {
        break missingId;
      }

      return new ActivityConfirmationPageBinding((RelativeLayout) rootView, checkImage,
          circLoginButton, confirmationText, confirmedTitle, emailText, nameText, wesiteText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
