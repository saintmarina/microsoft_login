// Generated by view binder compiler. Do not edit!
package com.saintmarina.microsoft_sign_in.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.apachat.loadingbutton.core.customViews.CircularProgressButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.saintmarina.microsoft_sign_in.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityRegisterBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final CircularProgressButton cirRegisterButton;

  @NonNull
  public final TextInputEditText editTextEmail;

  @NonNull
  public final TextView editTextEmailError;

  @NonNull
  public final TextInputEditText editTextName;

  @NonNull
  public final TextView editTextNameError;

  @NonNull
  public final TextInputEditText editTextPassword;

  @NonNull
  public final TextView editTextPasswordError;

  @NonNull
  public final TextInputEditText editTextWebsite;

  @NonNull
  public final TextInputLayout textInputEmail;

  @NonNull
  public final TextInputLayout textInputName;

  @NonNull
  public final TextInputLayout textInputPassword;

  @NonNull
  public final TextInputLayout textInputWebsite;

  private ActivityRegisterBinding(@NonNull RelativeLayout rootView,
      @NonNull CircularProgressButton cirRegisterButton, @NonNull TextInputEditText editTextEmail,
      @NonNull TextView editTextEmailError, @NonNull TextInputEditText editTextName,
      @NonNull TextView editTextNameError, @NonNull TextInputEditText editTextPassword,
      @NonNull TextView editTextPasswordError, @NonNull TextInputEditText editTextWebsite,
      @NonNull TextInputLayout textInputEmail, @NonNull TextInputLayout textInputName,
      @NonNull TextInputLayout textInputPassword, @NonNull TextInputLayout textInputWebsite) {
    this.rootView = rootView;
    this.cirRegisterButton = cirRegisterButton;
    this.editTextEmail = editTextEmail;
    this.editTextEmailError = editTextEmailError;
    this.editTextName = editTextName;
    this.editTextNameError = editTextNameError;
    this.editTextPassword = editTextPassword;
    this.editTextPasswordError = editTextPasswordError;
    this.editTextWebsite = editTextWebsite;
    this.textInputEmail = textInputEmail;
    this.textInputName = textInputName;
    this.textInputPassword = textInputPassword;
    this.textInputWebsite = textInputWebsite;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityRegisterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_register, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityRegisterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cirRegisterButton;
      CircularProgressButton cirRegisterButton = ViewBindings.findChildViewById(rootView, id);
      if (cirRegisterButton == null) {
        break missingId;
      }

      id = R.id.editTextEmail;
      TextInputEditText editTextEmail = ViewBindings.findChildViewById(rootView, id);
      if (editTextEmail == null) {
        break missingId;
      }

      id = R.id.editTextEmailError;
      TextView editTextEmailError = ViewBindings.findChildViewById(rootView, id);
      if (editTextEmailError == null) {
        break missingId;
      }

      id = R.id.editTextName;
      TextInputEditText editTextName = ViewBindings.findChildViewById(rootView, id);
      if (editTextName == null) {
        break missingId;
      }

      id = R.id.editTextNameError;
      TextView editTextNameError = ViewBindings.findChildViewById(rootView, id);
      if (editTextNameError == null) {
        break missingId;
      }

      id = R.id.editTextPassword;
      TextInputEditText editTextPassword = ViewBindings.findChildViewById(rootView, id);
      if (editTextPassword == null) {
        break missingId;
      }

      id = R.id.editTextPasswordError;
      TextView editTextPasswordError = ViewBindings.findChildViewById(rootView, id);
      if (editTextPasswordError == null) {
        break missingId;
      }

      id = R.id.editTextWebsite;
      TextInputEditText editTextWebsite = ViewBindings.findChildViewById(rootView, id);
      if (editTextWebsite == null) {
        break missingId;
      }

      id = R.id.textInputEmail;
      TextInputLayout textInputEmail = ViewBindings.findChildViewById(rootView, id);
      if (textInputEmail == null) {
        break missingId;
      }

      id = R.id.textInputName;
      TextInputLayout textInputName = ViewBindings.findChildViewById(rootView, id);
      if (textInputName == null) {
        break missingId;
      }

      id = R.id.textInputPassword;
      TextInputLayout textInputPassword = ViewBindings.findChildViewById(rootView, id);
      if (textInputPassword == null) {
        break missingId;
      }

      id = R.id.textInputWebsite;
      TextInputLayout textInputWebsite = ViewBindings.findChildViewById(rootView, id);
      if (textInputWebsite == null) {
        break missingId;
      }

      return new ActivityRegisterBinding((RelativeLayout) rootView, cirRegisterButton,
          editTextEmail, editTextEmailError, editTextName, editTextNameError, editTextPassword,
          editTextPasswordError, editTextWebsite, textInputEmail, textInputName, textInputPassword,
          textInputWebsite);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
